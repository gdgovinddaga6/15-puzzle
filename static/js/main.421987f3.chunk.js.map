{"version":3,"sources":["Header.js","Moves.js","Square.js","Board.js","constants/directions.js","Game.js","Puzzle/index.js","App.js","index.js"],"names":["Header","className","Component","Moves","this","props","moves","Square","number","Board","cols","i","numberDiv","key","numbers","rowSeperationDiv","push","UP","DOWN","LEFT","RIGHT","Game","state","newGame","gameDiv","React","createRef","focusGameDiv","current","focus","onKeyDown","handleKeyPress","bind","tabIndex","ref","onBlur","e","preventDefault","keyCode","makeMove","direction","emptyIndex","neighbourIndex","index","indexOf","getNeighbour","slice","isSolved","a","checkWin","alert","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","getEmptyIndex","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.421987f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h3>Puzzle Game</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Moves extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"moves\">\r\n                <p>\r\n                    <strong>Moves : {this.props.moves}</strong>\r\n                    <i>Use arrow keys to move numbers</i>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moves;","import React, { Component } from 'react';\r\n\r\nclass Square extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"square\">\r\n                {this.props.number}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Square;","import React, { Component } from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends Component {\r\n    render() {\r\n        var cols = [];\r\n        for(let i=0; i<16; i++)\r\n        {\r\n            var numberDiv = <div key={\"square-\"+i} className=\"column\">\r\n                                <Square number={this.props.numbers[i]} />\r\n                            </div>;\r\n            var rowSeperationDiv = <div key={\"row-\"+i} className=\"w-100\"></div>;\r\n\r\n            if(i%4 === 0 && i!==0)\r\n            {\r\n                cols.push(rowSeperationDiv);\r\n            }\r\n            cols.push(numberDiv);\r\n        }\r\n        return (\r\n            <div className=\"board-container\">\r\n                <div className=\"board\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {cols}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","export const UP = \"UP\";\r\nexport const DOWN = \"DOWN\";\r\nexport const LEFT = \"LEFT\";\r\nexport const RIGHT = \"RIGHT\";","import React, { Component } from 'react';\r\nimport Moves from './Moves';\r\nimport Board from './Board';\r\nimport { UP, LEFT, RIGHT, DOWN } from './constants/directions';\r\nimport {shuffle, getEmptyIndex, getNeighbour, checkWin} from './Puzzle'\r\nclass Game extends Component {\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n        this.state = this.newGame();\r\n\r\n        this.gameDiv = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.focusGameDiv();\r\n    }\r\n    \r\n    // forced focus\r\n    focusGameDiv()\r\n    {\r\n        this.gameDiv.current.focus();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"game\" onKeyDown={this.handleKeyPress.bind(this)} tabIndex=\"0\" ref={this.gameDiv} onBlur={() => this.focusGameDiv()} >\r\n                <Moves moves={this.state.moves} />\r\n                <Board numbers={this.state.numbers} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleKeyPress(e)\r\n    {\r\n        e.preventDefault();\r\n        switch (e.keyCode) \r\n        {\r\n            case 37:\r\n                this.makeMove(LEFT)\r\n                break;\r\n            case 38:\r\n                this.makeMove(UP)\r\n                break;\r\n            case 39:\r\n                this.makeMove(RIGHT)\r\n                break;\r\n            case 40:\r\n                this.makeMove(DOWN)\r\n                break;\r\n            default  : break;\r\n        }\r\n    }\r\n\r\n    makeMove(direction) \r\n    {\r\n        \r\n        var emptyIndex = this.state.emptyIndex;\r\n        var neighbourIndex = getNeighbour(emptyIndex, direction);\r\n        \r\n        if(neighbourIndex !== -1)\r\n        {\r\n            var numbers = this.state.numbers.slice();\r\n            numbers[emptyIndex] = numbers[neighbourIndex];\r\n            numbers[neighbourIndex] = null;\r\n            emptyIndex = neighbourIndex;\r\n            \r\n            var isSolved = checkWin(numbers);\r\n            if(isSolved === true)\r\n            {\r\n                alert(\"you solved the puzzle !!\");\r\n                this.setState(this.newGame());\r\n            }\r\n            else\r\n            {\r\n                this.setState({\r\n                    numbers : numbers,\r\n                    isSolved : isSolved,\r\n                    moves : this.state.moves + 1,\r\n                    emptyIndex : emptyIndex\r\n                });\r\n            }\r\n        }  \r\n        \r\n    }\r\n\r\n    newGame()\r\n    {\r\n        var numbers = shuffle([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,null]);\r\n        var emptyIndex = getEmptyIndex(numbers);\r\n        \r\n        return {\r\n            moves : 0,\r\n            numbers : numbers,\r\n            emptyIndex : emptyIndex,\r\n            isSolved : true\r\n        }\r\n    }\r\n}\r\n\r\nexport default Game;","import { UP, DOWN, LEFT, RIGHT } from \"../constants/directions\";\r\n\r\nexport function shuffle(array) \r\n{\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    while (0 !== currentIndex) {\r\n  \r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n}\r\n\r\nexport function getEmptyIndex(a) \r\n{\r\n    for(let i=0; i<15; i++)\r\n    {\r\n        if(a[i] === null)\r\n        {\r\n            return i;\r\n        }\r\n    }\r\n    return -1; // error case\r\n}\r\n\r\nexport function getNeighbour(index, direction)\r\n{\r\n    switch(direction)\r\n    {\r\n        case UP     : return ([12, 13, 14, 15]).indexOf(index) === -1 ? index+4 : -1;\r\n        case DOWN   : return ([0, 1, 2, 3]).indexOf(index) === -1 ? index-4 : -1;\r\n        case LEFT   : return ([3, 7, 11, 15]).indexOf(index) === -1 ? index+1 : -1;\r\n        case RIGHT  : return ([0,4,8,12]).indexOf(index) === -1 ? index-1 : -1;\r\n        default     : return -1; // wrong direction - error case\r\n    }\r\n}\r\n\r\nexport function checkWin(a) \r\n{\r\n    for(let i=0; i<15; i++)\r\n    {\r\n        if(a[i] !== i+1)\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","import React, { Component } from 'react';\nimport Header from './Header';\nimport Game from './Game';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<Game />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}